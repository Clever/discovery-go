make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0
 
make: *** No rule to make target `all'.  Stop.


# Make data base, printed on Thu Jun 16 11:50:08 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# makefile (from `golang.mk', line 4)
GOLANG_MK_VERSION := 1.0.1
# makefile (from `Makefile', line 6)
PKGS = $(shell go list ./... | grep -v /vendor)
# environment
 
VSCODE_LOG_NATIVE = false
# makefile (from `golang.mk', line 133)
define golang-test-all-strict
$(call golang-fmt,$(1))
$(call golang-lint-strict,$(1))
$(call golang-vet,$(1))
$(call golang-test-strict,$(1))
endef
# automatic
?D = $(patsubst %/,%,$(dir $?))
# environment
SSH_AUTH_SOCK = ~/.ssh/agent
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /Users/chris.martin/go/src/github.com/Clever/discovery-go
# makefile (from `Makefile', line 5)
SHELL := /bin/bash
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# makefile (from `golang.mk', line 11)
TZ = UTC
# makefile (from `Makefile', line 7)
_ := @echo ""
# makefile (from `golang.mk', line 1)
MAKEFILE_LIST :=  Makefile golang.mk
# makefile (from `golang.mk', line 110)
define golang-vet
@echo "VETTING $(1)..."
@go vet $(1)
endef
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from `golang.mk', line 7)
SYSTEM := darwin
# environment
__CFBundleIdentifier = com.microsoft.VSCode
# environment
INFOPATH = /opt/homebrew/share/info:
# environment
VSCODE_IPC_HOOK_EXTHOST = /var/folders/b7/x7tpm4rs7l10c3mcml9vjssr0000gn/T/vscode-ipc-dc0a28c2-f513-4a86-bab4-095de44e91a2.sock
# makefile (from `golang.mk', line 23)
golang-version-check = _ := $(if $(shell expr >/dev/null `go version | cut -d" " -f3 | cut -c3- | cut -d. -f2 | sed -E 's/beta[0-9]+//'` \>= `echo $(1) | cut -d. -f2` \& `go version | cut -d" " -f3 | cut -c3- | cut -d. -f1` = `echo $(1) | cut -d. -f1` && echo 1), @echo "", $(error must be running Go version ^$(1) - you are running $(shell go version | cut -d" " -f3 | cut -c3-)))
# environment
VSCODE_CWD = /
# environment
GOPROXY = https://proxy.golang.org,direct
# environment
PATH = /Users/chris.martin/.nvm/versions/node/v14.19.2/bin:/Library/Frameworks/Python.framework/Versions/2.7/bin:/Applications/SnowSQL.app/Contents/MacOS:/opt/homebrew/bin:/opt/homebrew/sbin:/Library/Frameworks/Python.framework/Versions/3.10/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion Tech Preview.app/Contents/Public:/usr/local/go/bin:/Users/chris.martin/go/bin
# makefile (from `golang.mk', line 59)
define golang-fmt
@echo "FORMATTING $(1)..."
@PKG_PATH=$$(go list -f '{{.Dir}}' $(1)); $(FGT) gofmt -l=true $${PKG_PATH}/*.go
endef
# makefile (from `golang.mk', line 50)
GOLINT := /Users/chris.martin/go/bin/golint
# makefile (from `golang.mk', line 17)
GOPATH = $(shell echo $$GOPATH | cut -d: -f1)
# environment
NVM_BIN = /Users/chris.martin/.nvm/versions/node/v14.19.2/bin
# environment
LaunchInstanceID = F0B01F65-83DF-4BE1-8124-DE1EABBEE31D
# environment
VSCODE_LOG_STACK = false
# environment
ELECTRON_RUN_AS_NODE = 1
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# environment
GITHUB_API_TOKEN = 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
# automatic
%F = $(notdir $%)
# environment
VSCODE_PIPE_LOGGING = true
# environment
PWD = /Users/chris.martin/go/src/github.com/Clever/discovery-go
# environment
HOMEBREW_CELLAR = /opt/homebrew/Cellar
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# environment
MANPATH = /Users/chris.martin/.nvm/versions/node/v14.19.2/share/man:/opt/homebrew/share/man::
# environment
GOMODCACHE = /Users/chris.martin/go/pkg/mod
# environment
HOME = /Users/chris.martin
# makefile (from `golang.mk', line 143)
define golang-build
@echo "BUILDING..."
@if [ -z "$$CI" ]; then go build -o bin/$(2) $(1); else echo "-> Building CGO binary"; CGO_ENABLED=0 go build -installsuffix cgo -o bin/$(2) $(1); fi;
endef
# default
MAKEFILEPATH = $(shell /usr/bin/xcode-select -print-path 2>/dev/null || echo /Developer)/Makefiles
# environment
VSCODE_CODE_CACHE_PATH = /Users/chris.martin/Library/Application Support/Code/CachedData/da15b6fd3ef856477bf6f4fb29ba1b7af717770d
# environment
LOGNAME = chris.martin
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# environment
NVM_CD_FLAGS = -q
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
XPC_FLAGS = 0x0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 1
# environment
CODE_HOME = /Users/chris.martin/go/src/github.com/Clever
# environment
AWS_PROFILE = main-engineer
# default
MAKE_VERSION := 3.81
# environment
USER = chris.martin
# makefile (from `Makefile', line 2)
.DEFAULT_GOAL := test 
# automatic
%D = $(patsubst %/,%,$(dir $%))
# default
MAKE_COMMAND := /Library/Developer/CommandLineTools/usr/bin/make
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/b7/x7tpm4rs7l10c3mcml9vjssr0000gn/T/
# automatic
*F = $(notdir $*)
# environment
VSCODE_IPC_HOOK = /Users/chris.martin/Library/Application Support/Code/1.67.1-main.sock
# makefile
MAKEFLAGS = Rrqp
# environment
MFLAGS = -Rrqp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
NVM_DIR = /Users/chris.martin/.nvm
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCode.9883385.9883391
# environment
HOMEBREW_PREFIX = /opt/homebrew
# automatic
+D = $(patsubst %/,%,$(dir $+))
# automatic
+F = $(notdir $+)
# makefile (from `golang.mk', line 80)
define golang-lint-strict
@echo "LINTING $(1)..."
@PKG_PATH=$$(go list -f '{{.Dir}}' $(1)); find $${PKG_PATH}/*.go -type f | grep -v gen_ | xargs $(FGT) $(GOLINT)
endef
# environment
HOMEBREW_REPOSITORY = /opt/homebrew
# environment
__CF_USER_TEXT_ENCODING = 0x1F5:0x0:0x0
# makefile (from `golang.mk', line 69)
define golang-lint
@echo "LINTING $(1)..."
@PKG_PATH=$$(go list -f '{{.Dir}}' $(1)); find $${PKG_PATH}/*.go -type f | grep -v gen_ | xargs $(GOLINT)
endef
# environment
COMMAND_MODE = unix2003
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# environment
GOPRIVATE = github.com/Clever/*
# makefile (from `golang.mk', line 14)
GOFLAGS := -mod=vendor 
# environment
LC_ALL = C
# makefile (from `golang.mk', line 120)
define golang-test-all
$(call golang-fmt,$(1))
$(call golang-lint,$(1))
$(call golang-vet,$(1))
$(call golang-test,$(1))
endef
# environment
AWS_ACCOUNT_NUMBER = 5896-9093-2525
# environment
SECURITYSESSIONID = 186b3
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# default
.INCLUDE_DIRS = /usr/local/include
# makefile (from `golang.mk', line 40)
FGT := /Users/chris.martin/go/bin/fgt
# environment
MAKELEVEL := 0
# makefile (from `golang.mk', line 100)
define golang-test-strict
@echo "TESTING $(1)..."
@go test -v -race $(1)
endef
# environment
LANG = C
# environment
VSCODE_PID = 685
# makefile (from `golang.mk', line 90)
define golang-test
@echo "TESTING $(1)..."
@go test -v $(1)
endef
# variable set hash-table stats:
# Load=97/1024=9%, Rehash=0, Collisions=8/154=5%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777234, inode 14870026): 16 files, no impossibilities.

# 16 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

# Not a target:
golang.mk:
#  Implicit rule search has been done.
#  Last modified 2022-06-16 11:47:35
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

# Not a target:
all:
#  Command-line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

.PHONY: golang-test-deps golang-ensure-curl-installed test
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

golang-ensure-curl-installed:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `golang.mk', line 45):
	@command -v curl >/dev/null 2>&1 || { echo >&2 "curl not installed. Please install curl."; exit 1; }
	

golang-lint-deps: /Users/chris.martin/go/bin/golint
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

/Users/chris.martin/go/bin/fgt:
 
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `golang.mk', line 42):
	go install -mod=readonly github.com/GeertJohan/fgt@262f7b11eec07dc7b147c44641236f3212fee89d
	

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-06-16 11:47:35
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

test: github.com/Clever/discovery-go
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

golang-fmt-deps: /Users/chris.martin/go/bin/fgt
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

/Users/chris.martin/go/bin/golint:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `golang.mk', line 52):
	go install -mod=readonly golang.org/x/lint/golint@738671d3881b9731cc63024d5d88cf28db875626
	

github.com/Clever/discovery-go: golang-test-all-strict-deps
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 11):
	@go get -d -t $@
	$(call golang-test-all-strict,$@)
	

golang-lint-deps-strict: /Users/chris.martin/go/bin/golint /Users/chris.martin/go/bin/fgt
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

install_deps:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 15):
	go mod vendor
	

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

golang-test-strict-deps:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

golang-test-deps:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

golang-test-all-strict-deps: golang-fmt-deps golang-lint-deps-strict golang-test-strict-deps golang-vet-deps
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

golang-test-all-deps: golang-fmt-deps golang-lint-deps golang-test-deps golang-vet-deps
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

golang-update-makefile:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `golang.mk', line 155):
	@wget https://raw.githubusercontent.com/Clever/dev-handbook/master/make/golang-v1.mk -O /tmp/golang.mk 2>/dev/null
	@if ! grep -q $(GOLANG_MK_VERSION) /tmp/golang.mk; then cp /tmp/golang.mk golang.mk && echo "golang.mk updated"; else echo "golang.mk is up-to-date"; fi
	

golang-vet-deps:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# files hash-table stats:
# Load=21/1024=2%, Rehash=0, Collisions=2/52=4%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 2
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 4077 / max = 4077 / min = 4077 / avg = 4077

# Finished Make data base on Thu Jun 16 11:50:08 2022

 
